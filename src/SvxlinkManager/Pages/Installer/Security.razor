@using System.Globalization
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<Security> Loc

<div class="alert alert-primary" role="alert">
  @AlertHeader
</div>

<EditForm Model="@InstallerModel" OnValidSubmit="()=>OnSubmit.InvokeAsync(InstallationStatus.Channel)">
  <FluentValidator TValidator="UserPasswordValidator" />

  <div class="form-row">
    <div class="form-group col-md-6">
      <label data-toggle="tooltip" title="@Loc["UserNameToolTip"]">@Loc["UserNameLabel"]</label>
      <InputText @bind-Value="InstallerModel.UserName" type="text" class="form-control" id="UserName" placeholder="@Loc["UserNamePlaceHolder"]" />
      <ValidationMessage For="@(() => InstallerModel.UserName)" />
    </div>
  </div>
  <div class="form-row">

    <div class="form-group col-md-6">
      <label data-toggle="tooltip" title="@Loc["PasswordToolTip"]">@Loc["PasswordLabel"]</label>
      <InputText @bind-Value="InstallerModel.Password" type="password" class="form-control" id="Password" placeholder="@Loc["PasswordPlaceHolder"]" />
      <ValidationMessage For="@(() => InstallerModel.Password)" />
    </div>
    <div class="form-group col-md-6">
      <label data-toggle="tooltip" title="@Loc["Password2ToolTip"]">@Loc["Password2Label"]</label>
      <InputText @bind-Value="InstallerModel.Password2" type="password" class="form-control" id="Password2" placeholder="@Loc["Password2PlaceHolder"]" />
      <ValidationMessage For="@(() => InstallerModel.Password2)" />
    </div>
  </div>

  <button class="btn btn-primary" type="submit">@Loc["BtnNext"]</button>
</EditForm>

@code {
  [Parameter]
  public InstallerModel InstallerModel { get; set; }

  [Parameter]
  public EventCallback<InstallationStatus> OnSubmit { get; set; }

  public MarkupString AlertHeader => new MarkupString(Loc["AlertHeader"]);

}