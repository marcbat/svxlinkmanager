@using System.Globalization
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<AddEditForm> Loc

<EditForm Model="@RadioProfile" OnValidSubmit="@HandleValidSubmit">
  <DataAnnotationsValidator />
  <ValidationSummary />

  <div class="form-row">
    <div class="form-group">
      <label data-toggle="tooltip" title="@Loc["InputNameToolTip"]">@Loc["InputNameLabel"]</label>
      <InputText @bind-Value="RadioProfile.Name" type="text" class="form-control" id="inputName" placeholder="@Loc["InputNameplaceHolder"]" />
    </div>
  </div>
  <div class="form-row">
    <div class="form-group col-md-4">
      <label>@Loc["InputTrxTypeLabel"]</label>
      <InputSelect @bind-Value="RadioProfile.Trx" class="form-control">
        @foreach (var trx in RadioProfile.TrxTypes)
{
@if (RadioProfile.Trx == trx.Key)
{
<option selected value="@trx.Key">@trx.Value</option>
}
else
{
<option value="@trx.Key">@trx.Value</option>
}
}
      </InputSelect>
    </div>
    <div class="form-group col-md-4">
      <label data-toggle="tooltip" title="@Loc["La fréquence d'émission du module SA818."]">@Loc["Fréquence d'émission"]</label>
      <InputText @bind-Value="RadioProfile.TxFrequ" type="text" class="form-control" id="inputTx" placeholder="@Loc["145.450 ou 434.400 par exemple"]" />
    </div>
    <div class="form-group col-md-4">
      <label data-toggle="tooltip" title="@Loc["InputRxToolTip"]">@Loc["InputRxLabel"]</label>
      <InputText @bind-Value="RadioProfile.RxFequ" type="text" class="form-control" id="inputRx" placeholder="@Loc["InputRxPlaceHolder"]" />
    </div>
  </div>

  <div class="form-row">
    <div class="form-group col-md-4">
      <label>@Loc["InputTxCtcssLabel"]</label>
      <InputSelect @bind-Value="RadioProfile.TxCtcss" class="form-control">
        @foreach (var ct in RadioProfile.Ctcss)
{
<option value="@ct.Key">@ct.Value</option>
}
      </InputSelect>
      <ValidationMessage For="@(() => RadioProfile.TxCtcss)" />
    </div>
    <div class="form-group col-md-4">
      <label>@Loc["InputRxCtcssLabel"]</label>
      <InputSelect @bind-Value="RadioProfile.RxCtcss" class="form-control">
        @foreach (var ct in RadioProfile.Ctcss)
{
<option value="@ct.Key">@ct.Value</option>
}
      </InputSelect>
      <ValidationMessage For="@(() => RadioProfile.RxCtcss)" />
    </div>
    <div class="form-group col-md-4">
      <label>@Loc["InputSquelchLabel"]</label>
      <InputSelect @bind-Value="RadioProfile.Squelch" class="form-control">
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
      </InputSelect>
      <ValidationMessage For="@(() => RadioProfile.Squelch)" />
    </div>
  </div>
  <button type="submit" class="btn btn-success">Sauver</button> <a class="btn btn-primary" href="RadioProfile/Manage" role="button">@Loc["BtnCancel"]</a>
</EditForm>

@code{
  [Parameter]
  public Models.RadioProfile RadioProfile { get; set; }

  [Parameter]
  public string SubmitTitle { get; set; }

  [Parameter]
  public EventCallback<EditContext> HandleValidSubmit { get; set; }

}