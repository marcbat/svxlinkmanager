@page "/Reflector/Manage"

@inherits SvxlinkManager.Pages.Reflector.ManageBase

<div class="d-inline-block">
  <h3>Scan</h3>
</div>

@if (IsReflectorRunning)
{<div class="blink d-inline-block" style="margin-left:5px;">
    <span class="badge badge-danger">activé</span>
  </div>}
else
{ <div class="d-inline-block" style="margin-left:5px;">
    <span class="badge badge-info">désactivé</span>
  </div>}

<EditForm OnValidSubmit="@HandleValidSubmitAsync">
  <DataAnnotationsValidator />
  <ValidationSummary />
  <div class="form-row">
    <div class="form-group col-md-12">
      <small id="svxlinkconfHelp" class="form-text text-muted">La documentation du fichier svxlink.conf est disponible <a href="http://www.svxlink.org/doc/man/man5/svxlink.conf.5.html" target="_blank">ici</a></small>
        <pre id="svxlinkconf" class="editor">@ReflectorConfig</pre>
        <InputTextArea @bind-Value="@ReflectorConfig" type="text" class="form-control fileEditor" id="svxlinkconf-textarea" />
    </div>
  </div>
  <div class="btn-toolbar">
    @if (IsChanged)
    {
      <button type="submit" class="btn btn-success">Sauver</button>
    }
    else
    {
      @if (IsReflectorRunning)
      {
        <button type="button" class="btn btn-outline-danger" @onclick="@(() => Stop())">Désactiver</button>
      }
      else
      {
        <button type="button" class="btn btn-outline-success" @onclick="@(() => Run())">Activer</button>
      }
    }
  </div>
</EditForm>