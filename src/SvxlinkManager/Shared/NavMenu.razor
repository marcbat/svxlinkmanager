@using System.Reflection;
@using SvxlinkManager.Service
@using System.Timers;

<div class="top-row pl-4 navbar navbar-dark">
  <a class="navbar-brand" href="">Svxlink Manager @InformationalVersion</a>
  <button class="navbar-toggler" @onclick="ToggleNavMenu">
    <span class="navbar-toggler-icon"></span>
  </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
  <ul class="nav flex-column">

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-home" aria-hidden="true"></span> Accueil
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="Channel/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-globe" aria-hidden="true"></span> Salons
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="AdvanceChannel/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-globe" aria-hidden="true"></span> Salons avancés
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="Echolink/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-audio" aria-hidden="true"></span> Echolink
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="Reflector/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-hard-drive" aria-hidden="true"></span> Reflector
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="/RadioProfile/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-rss" aria-hidden="true"></span> Profil Radio
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="/Scanning/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-eye" aria-hidden="true"></span> Scanner
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="/Wifi/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-wifi" aria-hidden="true"></span> Wifi
      </NavLink>
    </li>

    <li class="nav-item px-3">
      <NavLink class="nav-link" href="/Updater/Manage" Match="NavLinkMatch.Prefix">
        <span class="oi oi-cloud-download" aria-hidden="true"></span> Mise à jour
        @if (!IsUpToDate)
        {
          <div class="blink d-inline-block" style="margin-left:5px;">
            <span class="badge badge-danger">New!</span>
          </div>
        }
      </NavLink>
    </li>
  </ul>
</div>

@code {

  private Timer updaterTimer;

  protected override void OnInitialized()
  {
    UpdaterService.OnReleasesDownloadCompleted += SetUpToDate;

    updaterTimer = new Timer(3600000);
    updaterTimer.Elapsed += (s, e) => UpdaterService.LoadReleases();
    updaterTimer.Start();

    base.OnInitialized();
  }

  private void SetUpToDate()
  {
    IsUpToDate = UpdaterService.IsUpToDate();
    InvokeAsync(() => StateHasChanged());
  }

  public bool IsUpToDate { get; set; } = true;

  private bool collapseNavMenu = true;

  private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

  private void ToggleNavMenu()
  {
    collapseNavMenu = !collapseNavMenu;
  }

  public string InformationalVersion => Assembly.GetEntryAssembly().GetCustomAttribute<AssemblyInformationalVersionAttribute>().InformationalVersion;

  public void Dispose()
  {
    UpdaterService.OnReleasesDownloadCompleted -= SetUpToDate;
  }

  [Inject]
  public UpdaterService UpdaterService { get; set; }
}